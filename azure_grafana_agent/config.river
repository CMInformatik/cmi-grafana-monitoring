module.git "base_module" {
  repository = "https://github.com/CMInformatik/cmi-grafana-monitoring.git"
  path       = "modules/grafana-agent-uplink.river"
  revision = "<replace_branch_name>"
  arguments {
    token = "<replace_grafana_token>"
    environment = "<replace_environment_name>"
    stack_name = "<replace_stack_name>"
  }
}

discovery.azure "main" {
    subscription_id = "<replace_azure_subscription_id>"
    port = 12345
    managed_identity {
      client_id = "<replace_azure_client_id>"
  }
}

discovery.relabel "check_monitoring_lables" {
  targets = discovery.azure.main.targets

  rule {
    action = "keep"
    source_labels  = ["__meta_azure_machine_tag_GrafanaMonitoring"]
    regex = "true"
  }
}

discovery.relabel "grafana_agent_job" {
  targets = discovery.relabel.check_monitoring_lables.output

  rule {
    action = "replace"
    target_label = "job"
    replacement = "integrations/agent-check"
  }
  rule {
    action = "replace"
    target_label = "__metrics_path__"
    replacement = "/metrics"
  }
}

discovery.relabel "os_metrics" {
  targets = discovery.relabel.check_monitoring_lables.output

  rule {
    source_labels = ["__meta_azure_machine_tag_OS"]
    regex = "Windows"
    action = "replace"
    target_label = "__metrics_path__"
    replacement = "/api/v0/component/prometheus.exporter.windows.default/metrics"
  }
  rule {
    source_labels = ["__meta_azure_machine_tag_OS"]
    regex = "Linux"
    action = "replace"
    target_label = "__metrics_path__"
    replacement = "/api/v0/component/prometheus.exporter.unix.default/metrics"
  }
}

prometheus.scrape "default_metrics" {
  targets = concat(discovery.relabel.grafana_agent_job.output, discovery.relabel.os_metrics.output)
  forward_to = [
    module.git.base_module.exports.metrics_receiver,
  ]
}


prometheus.scrape "grafana_agent" {
  targets = [{"__address__" = "localhost:12345", "job" = "integrations/agent-check", "instance" = "<replace_agent_name>"}]
  forward_to = [
    module.git.base_module.exports.metrics_receiver,
  ]
}