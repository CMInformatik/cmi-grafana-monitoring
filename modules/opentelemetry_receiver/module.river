argument "otelcol_metrics_receiver" { }

argument "otelcol_logs_receiver" { }

argument "otelcol_traces_receiver" { }

otelcol.receiver.otlp "default" {
	grpc {
		endpoint         = "0.0.0.0:4317"
		transport        = "tcp"
		read_buffer_size = "1024KiB"
	}

	http {
		endpoint = "0.0.0.0:4318"
	}

	output {
		metrics = [otelcol.processor.batch.default.input]
		logs    = [otelcol.processor.batch.default.input]
		traces  = [otelcol.processor.batch.default.input]
	}
}

otelcol.processor.batch "default" {
	output {
		metrics = [otelcol.exporter.prometheus.default.input]
		logs    = [otelcol.processor.attributes.drop_health_check_logs.input]
		traces  = [argument.otelcol_traces_receiver.value]
	}
}

// Drop all logs that are health check logs
otelcol.processor.attributes "drop_health_check_logs" {
	exclude {
		match_type = "regexp"

		attribute {
			key   = "RequestPath"
			value = "/healthz|/health"
		}
	}

	output {
		logs = [otelcol.exporter.loki.default.input]
	}
}

otelcol.exporter.loki "default" {
	forward_to = [argument.otelcol_logs_receiver.value]
}

otelcol.exporter.prometheus "default" {
	forward_to = [argument.otelcol_metrics_receiver.value]
}
