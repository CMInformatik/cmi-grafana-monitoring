argument "otelcol_metrics_receiver" { }

argument "otelcol_logs_receiver" { }

argument "otelcol_traces_receiver" { }

otelcol.processor.filter "drop_healthchecks" {
	error_mode = "ignore"

	logs {
		log_record = [
			"attributes[\"RequestPath\"] == \"/health\"",
			"attributes[\"RequestPath\"] == \"/healthx\"",
		]
	}

	output {
		metrics = [otelcol.processor.batch.default.input]
		logs    = [otelcol.processor.batch.default.input]
		traces  = [otelcol.processor.batch.default.input]
	}
}

otelcol.receiver.otlp "default" {
	grpc {
		endpoint         = "0.0.0.0:4317"
		transport        = "tcp"
		read_buffer_size = "1024KiB"
	}

	http {
		endpoint = "0.0.0.0:4318"
	}

	output {
		metrics = [otelcol.processor.filter.drop_healthchecks.input]
		logs    = [otelcol.processor.filter.drop_healthchecks.input]
		traces  = [otelcol.processor.filter.drop_healthchecks.input]
	}
}

otelcol.processor.batch "default" {
	output {
		metrics = [otelcol.exporter.prometheus.default.input]
		logs    = [otelcol.exporter.loki.default.input]
		traces  = [argument.otelcol_traces_receiver.value]
	}
}

otelcol.exporter.loki "default" {
	forward_to = [argument.otelcol_logs_receiver.value]
}

otelcol.exporter.prometheus "default" {
	forward_to = [argument.otelcol_metrics_receiver.value]
}
