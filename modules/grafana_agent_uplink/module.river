/********************************************
 * ARGUMENTS
 ********************************************/

argument "token" { }

argument "site" { }

argument "submodule_branch" {
	optional = true
	default  = "master"
}

argument "stack_name" {
	optional = true
	default  = "cminformatik"
}

argument "proxy_url" {
	optional = true
	default  = null
}

argument "additinal_lables_to_drop" {
	optional = true
	default  = []
}

/********************************************
 * EXPORTS
 ********************************************/

export "metrics_receiver" {
	value = prometheus.relabel.default_drop.receiver
}

export "logs_receiver" {
	value = loki.relabel.add_default_lables.receiver
}

export "traces_receiver" {
	value = module.git.grafana_cloud.exports.traces_receiver
}

export "agent_logs_receiver" {
	value = loki.process.grafana_agnet_log_processing.receiver
}

/********************************************
 * RELABELING RESOURCES
 ********************************************/

module.git "default_drop_lists" {
	repository = "https://github.com/CMInformatik/cmi-grafana-monitoring.git"
	path       = "modules/grafana_default_drop_list/module.river"
	revision   = argument.submodule_branch.value
}

prometheus.relabel "default_drop" {
	forward_to = [prometheus.relabel.add_default_labels.receiver]

	rule {
		source_labels = ["__name__"]
		regex         = join(concat(module.git.default_drop_lists.exports.metrics_lable_drop_list, argument.additinal_lables_to_drop.value), "|")
		action        = "drop"
	}
}

loki.process "grafana_agnet_log_processing" {
	forward_to = [
		loki.relabel.add_default_lables.receiver,
	]

	stage.json {
		expressions = {level = "level"}
	}

	stage.static_labels {
		values = {
			job = "integrations/agent",
		}
	}
}

loki.relabel "add_default_lables" {
	forward_to = [
		loki.process.exports.logs_receiver,
	]

	rule {
		target_label = "site"
		replacement  = argument.site.value
	}

	rule {
		source_labels = ["__host__"]
		target_label  = "agent_hostname"
	}
}

loki.process "drop_unwanted_logs" {
	forward_to = [
		module.git.grafana_cloud.exports.logs_receiver,
	]

	stage.drop {
		source = "source"
		expression = "CMI.Server.Fulltext.FulltextIndexQueue.cs*"
		drop_counter_reason = "Drop fulltext index logs because some servers are generating a lot of logs and we don't need them"
	}
}

prometheus.relabel "add_default_labels" {
	rule {
		source_labels = ["instance"]
		target_label  = "agent_hostname"
	}

	rule {
		target_label = "site"
		replacement  = argument.site.value
	}

	rule {
		source_labels = ["job"]
		regex         = "integrations/windows"
		action        = "replace"
		target_label  = "job"
		replacement   = "integrations/windows_exporter"
	}
	forward_to = [
		module.git.grafana_cloud.exports.metrics_receiver,
	]
}

/********************************************
 * UPLINK RESOURCES
 ********************************************/

module.git "grafana_cloud" {
	repository = "https://github.com/CMInformatik/cmi-grafana-monitoring.git"
	path       = "modules/grafana_cloud_autoconfig/module.river"
	revision   = argument.submodule_branch.value

	arguments {
		stack_name = argument.stack_name.value
		token      = argument.token.value
		proxy_url  = argument.proxy_url.value
	}
}
