/********************************************
 * Grafana Collector Base Configuration

 The following configuration functions as base configuration for all Grafana Collectors operated by CM Informatik AG.
 Currently, the module exposes a metrics, logs and traces receiver for the CMI Grafana Cloud instance.
 The default instance is cminfromatik, but you can change it by setting the stack_name argument.
 ********************************************/

/********************************************
 * ARGUMENTS
 ********************************************/

argument "token" { }

argument "site" { }

argument "submodule_branch" {
	optional = true
	default  = "master"
}

argument "stack_name" {
	optional = true
	default  = "cminformatik"
}

argument "proxy_url" {
	optional = true
	default  = null
}

/********************************************
 * EXPORTS
 ********************************************/

export "metrics_receiver" {
	value = prometheus.relabel.add_default_labels.receiver
}

export "logs_receiver" {
	value = loki.relabel.add_default_lables.receiver
}

export "traces_receiver" {
	value = module.git.grafana_cloud.exports.traces_receiver
}

export "agent_logs_receiver" {
	value = loki.process.grafana_agnet_log_processing.receiver
}

/********************************************
 * OPEN TELEMTRY RESOURCES
 ********************************************/

otelcol.receiver.otlp "default" {
	grpc { }

	http { }

	output {
		metrics = [otelcol.processor.batch.default.input]
		logs    = [otelcol.processor.batch.default.input]
		traces  = [otelcol.processor.batch.default.input]
	}
}

otelcol.processor.batch "default" {
	output {
		metrics = [otelcol.exporter.prometheus.default.input]
		logs    = [otelcol.exporter.loki.default.input]
		traces  = [module.git.grafana_cloud.exports.traces_receiver]
	}
}

otelcol.exporter.loki "default" {
	forward_to = [loki.relabel.add_default_lables.receiver]
}

otelcol.exporter.prometheus "default" {
	forward_to = [prometheus.relabel.add_default_labels.receiver]
}

/********************************************
 * RELABELING RESOURCES
 ********************************************/

loki.process "grafana_agnet_log_processing" {
	forward_to = [
		loki.relabel.add_default_lables.receiver,
	]

	stage.json {
		expressions = {level = "level"}
	}

	stage.static_labels {
		values = {
			job = "integrations/agent",
		}
	}
}

loki.relabel "add_default_lables" {
	forward_to = [
		module.git.grafana_cloud.exports.logs_receiver,
	]

	rule {
		target_label = "site"
		replacement  = argument.site.value
	}

	rule {
		source_labels = ["__host__"]
		target_label  = "agent_hostname"
	}
}

prometheus.relabel "add_default_labels" {
	rule {
		source_labels = ["instance"]
		target_label  = "agent_hostname"
	}

	rule {
		target_label = "site"
		replacement  = argument.site.value
	}

	rule {
		source_labels = ["job"]
		regex         = "integrations/windows"
		action        = "replace"
		target_label  = "job"
		replacement   = "integrations/windows_exporter"
	}
	forward_to = [
		module.git.grafana_cloud.exports.metrics_receiver,
	]
}

/********************************************
 * UPLINK RESOURCES
 ********************************************/

module.git "grafana_cloud" {
	repository = "https://github.com/CMInformatik/cmi-grafana-monitoring.git"
	path       = "modules/grafana_cloud_autoconfig/module.river"
	revision   = argument.submodule_branch.value

	arguments {
		stack_name = argument.stack_name.value
		token      = argument.token.value
		proxy_url  = argument.proxy_url.value
	}
}
