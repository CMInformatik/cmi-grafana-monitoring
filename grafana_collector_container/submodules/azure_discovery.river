argument "azure_subscription_id" { }

argument "azure_client_id" { }

argument "metrics_receiver" { }

argument "azure_env_name" { }

discovery.azure "main" {
	subscription_id = argument.azure_subscription_id.value
	port            = 12345

	managed_identity {
		client_id = argument.azure_client_id.value
	}
}

discovery.relabel "check_monitoring_lables" {
	targets = discovery.azure.main.targets

	rule {
		action        = "keep"
		source_labels = ["__meta_azure_machine_tag_GrafanaMonitoring"]
		regex         = "true"
	}

	rule {
		action        = "keep"
		source_labels = ["__meta_azure_machine_tag_Environment"]
		regex         = argument.azure_env_name.value
	}
}

discovery.relabel "add_instance_label" {
	targets = discovery.relabel.check_monitoring_lables.output

	rule {
		action        = "replace"
		source_labels = ["__meta_azure_machine_computer_name"]
		target_label  = "instance"
	}

	rule {
		action        = "replace"
		source_labels = ["__meta_azure_machine_computer_name"]
		target_label  = "agent_name"
	}

	rule {
		action        = "replace"
		source_labels = ["__meta_azure_machine_name"]
		target_label  = "azure_computer_name"
	}
}

discovery.relabel "grafana_agent_job" {
	targets = discovery.relabel.add_instance_label.output

	rule {
		action       = "replace"
		target_label = "job"
		replacement  = "integrations/agent"
	}

	rule {
		action       = "replace"
		target_label = "__metrics_path__"
		replacement  = "/metrics"
	}
}

discovery.relabel "os_metrics" {
	targets = discovery.relabel.add_instance_label.output

	rule {
		source_labels = ["__meta_azure_machine_tag_OS"]
		regex         = "Windows"
		action        = "replace"
		target_label  = "__metrics_path__"
		replacement   = "/api/v0/component/prometheus.exporter.windows.default/metrics"
	}

	rule {
		source_labels = ["__meta_azure_machine_tag_OS"]
		regex         = "Windows"
		action        = "replace"
		target_label  = "job"
		replacement   = "integrations/windows_exporter"
	}

	rule {
		source_labels = ["__meta_azure_machine_tag_OS"]
		regex         = "Linux"
		action        = "replace"
		target_label  = "__metrics_path__"
		replacement   = "/api/v0/component/prometheus.exporter.unix.default/metrics"
	}

	rule {
		source_labels = ["__meta_azure_machine_tag_OS"]
		regex         = "Linux"
		action        = "replace"
		target_label  = "job"
		replacement   = "integrations/node_exporter"
	}
}

prometheus.scrape "default_metrics" {
	targets    = concat(discovery.relabel.grafana_agent_job.output, discovery.relabel.os_metrics.output)
	forward_to = [
		argument.metrics_receiver.value,
	]
}
